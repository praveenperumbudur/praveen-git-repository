/* Create the database */
CREATE DATABASE  IF NOT EXISTS praveenassignment;

/* Switch to the praveenassignment database */
USE praveenassignment;

CREATE TABLE Worker (
    WORKER_ID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    FIRST_NAME CHAR(25),
    LAST_NAME CHAR(25),
    SALARY INT(15),
    JOINING_DATE DATETIME,
    DEPARTMENT CHAR(25)
);

INSERT INTO Worker
    (WORKER_ID, FIRST_NAME, LAST_NAME, SALARY, JOINING_DATE, DEPARTMENT) VALUES
        (001, 'Monika', 'Arora', 100000, '14-02-20 09.00.00', 'HR'),
        (002, 'Niharika', 'Verma', 80000, '14-06-11 09.00.00', 'Admin'),
        (003, 'Vishal', 'Singhal', 300000, '14-02-20 09.00.00', 'HR'),
        (004, 'Amitabh', 'Singh', 500000, '14-02-20 09.00.00', 'Admin'),
        (005, 'Vivek', 'Bhati', 500000, '14-06-11 09.00.00', 'Admin'),
        (006, 'Vipul', 'Diwan', 200000, '14-06-11 09.00.00', 'Account'),
        (007, 'Satish', 'Kumar', 75000, '14-01-20 09.00.00', 'Account'),
        (008, 'Geetika', 'Chauhan', 90000, '14-04-11 09.00.00', 'Admin');

CREATE TABLE Bonus (
    WORKER_REF_ID INT,
    BONUS_AMOUNT INT(10),
    BONUS_DATE DATETIME,
    FOREIGN KEY (WORKER_REF_ID)
        REFERENCES Worker(WORKER_ID)
        ON DELETE CASCADE
);

INSERT INTO Bonus
    (WORKER_REF_ID, BONUS_AMOUNT, BONUS_DATE) VALUES
        (001, 5000, '16-02-20'),
        (002, 3000, '16-06-11'),
        (003, 4000, '16-02-20'),
        (001, 4500, '16-02-20'),
        (002, 3500, '16-06-11');
   
CREATE TABLE Title (
    WORKER_REF_ID INT,
    WORKER_TITLE CHAR(25),
    AFFECTED_FROM DATETIME,
    FOREIGN KEY (WORKER_REF_ID)
        REFERENCES Worker(WORKER_ID)
        ON DELETE CASCADE
);

INSERT INTO Title
(WORKER_REF_ID, WORKER_TITLE, AFFECTED_FROM) VALUES
 (001, 'Manager', '2016-02-20 00:00:00'),
 (002, 'Executive', '2016-06-11 00:00:00'),
 (008, 'Executive', '2016-06-11 00:00:00'),
 (005, 'Manager', '2016-06-11 00:00:00'),
 (004, 'Asst. Manager', '2016-06-11 00:00:00'),
 (007, 'Executive', '2016-06-11 00:00:00'),
 (006, 'Lead', '2016-06-11 00:00:00'),
 (003, 'Lead', '2016-06-11 00:00:00');
 
 SELECT UPPER(FIRST_NAME) AS FIRST_NAME_UPPERCASE
FROM Worker;

SELECT DISTINCT DEPARTMENT
FROM Worker;

SELECT SUBSTRING(FIRST_NAME, 1, 3) AS FIRST_THREE_CHARACTERS
FROM Worker;

SELECT INSTR(FIRST_NAME, 'a') AS POSITION_OF_A
FROM Worker
WHERE FIRST_NAME = 'Amitabh';

 SELECT DISTINCT DEPARTMENT, CHAR_LENGTH(DEPARTMENT) AS DEPARTMENT_LENGTH
FROM Worker;

SELECT *
FROM Worker
ORDER BY FIRST_NAME ASC, DEPARTMENT DESC;

SELECT *
FROM Worker
WHERE FIRST_NAME IN ('Vipul', 'Satish');

SELECT *
FROM Worker
WHERE FIRST_NAME LIKE '%a%';

SELECT *
FROM Worker
WHERE FIRST_NAME LIKE '_____h' AND CHAR_LENGTH(FIRST_NAME) = 6;

SELECT *
FROM Worker
WHERE SALARY BETWEEN 100000 AND 500000;

SELECT *
FROM Worker
WHERE JOINING_DATE BETWEEN '2014-02-01' AND '2014-02-28 23:59:59';

SELECT COUNT(*) AS NumberOfEmployees
FROM Worker
WHERE DEPARTMENT = 'Admin';

SELECT DEPARTMENT, COUNT(*) AS NumberOfWorkers
FROM Worker
GROUP BY DEPARTMENT
ORDER BY NumberOfWorkers DESC;

SELECT * FROM Worker
WHERE WORKER_ID IN (
    SELECT WORKER_REF_ID
    FROM Title
    WHERE WORKER_TITLE = 'Manager'
);


SELECT WORKER_REF_ID, WORKER_TITLE, AFFECTED_FROM, COUNT(*)
FROM Title
GROUP BY WORKER_REF_ID, WORKER_TITLE, AFFECTED_FROM
HAVING COUNT(*) > 1;

SELECT FIRST_NAME, LAST_NAME, 
       (SELECT BONUS_AMOUNT 
        FROM Bonus 
        WHERE WORKER_REF_ID = Worker.WORKER_ID
        LIMIT 1) AS BONUS_AMOUNT
FROM Worker
WHERE WORKER_ID IN (
    SELECT WORKER_REF_ID
    FROM Bonus
);

SELECT *
FROM Worker
WHERE WORKER_ID NOT IN (
    SELECT WORKER_REF_ID
    FROM Bonus
);

SELECT DISTINCT SALARY
FROM Worker
ORDER BY SALARY DESC
LIMIT 2;

SELECT MAX(SALARY) AS SecondHighestSalary
FROM Worker
WHERE SALARY NOT IN (
    SELECT MAX(SALARY)
    FROM Worker
);

SELECT SALARY
FROM Worker
GROUP BY SALARY
HAVING COUNT(*) > 1;

SELECT *
FROM Worker
WHERE SALARY IN (
    SELECT SALARY
    FROM Worker
    GROUP BY SALARY
    HAVING COUNT(*) > 1
);

SELECT e.*
FROM Worker e
WHERE WORKER_ID <= (
  SELECT COUNT(*) / 2
  FROM Worker
);

SELECT DEPARTMENT
FROM Worker
GROUP BY DEPARTMENT
HAVING COUNT(*) > 3;


SELECT * FROM worker WHERE WORKER_ID IN ((SELECT MIN(WORKER_ID) FROM worker), (SELECT MAX(WORKER_ID) FROM worker));

SELECT *
FROM worker
ORDER BY WORKER_ID DESC
LIMIT 5;

SELECT *
FROM Worker w1
WHERE SALARY = (
    SELECT MAX(SALARY)
    FROM Worker w2
    WHERE w1.DEPARTMENT = w2.DEPARTMENT
);

SELECT DEPARTMENT, SUM(SALARY) AS TotalSalaries
FROM Worker
GROUP BY DEPARTMENT;

SELECT FIRST_NAME, LAST_NAME
FROM Worker
WHERE SALARY = (SELECT MAX(SALARY) FROM Worker);
